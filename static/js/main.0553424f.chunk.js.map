{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","displayFriend","id","alt","name","src","image","Wrapper","shakeWrapper","children","Title","heading","score","topScore","App","state","friends","clickedId","message","lastClicked","clickedList","shakeit","shuffleArray","friendsArray","sort","b","Math","random","resetGame","_this","setState","push","includes","_this2","this","components_Wrapper","components_Title","map","friend","components_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8nFAkBeA,MAff,SAAoBC,GAClB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,QACIE,QAAS,kBAAML,EAAMM,cAAcN,EAAMO,KACzCH,UAAU,aACVH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,kBCJ5BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAkC,SAArBJ,EAAMa,aAAyB,eAAiB,WAAYb,EAAMc,iBCS9EC,MAVf,SAAef,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMgB,UAClCf,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,UAAqCJ,EAAMiB,MAA3C,iBAAgEjB,EAAMkB,oBCgHlEC,6MAhHbC,MAAQ,CACNC,UACAC,UAAW,GACXJ,SAAU,EACVD,MAAO,EACPM,QAAS,GACTC,YAAa,EACbC,YAAa,GACbC,QAAS,WAGXC,aAAe,SAACC,GAEd,OADsBA,EAAaC,KAAK,SAAS3B,EAAG4B,GAAG,MAAO,GAAMC,KAAKC,cAI3EC,UAAY,WAOVC,EAAKC,SAAS,CACZlB,MAAO,EACPO,YAAa,EACbE,QAAS,OACTD,YAAa,GACbH,UAAW,OAKfhB,cAAgB,SAAAC,GACiB,IAA3B2B,EAAKd,MAAMI,YACTU,EAAKd,MAAMF,SAAWgB,EAAKd,MAAMH,OACnCiB,EAAKC,SAAS,CAAClB,MAAOiB,EAAKd,MAAMH,MAAQ,IACzCiB,EAAKd,MAAMK,YAAYW,KAAK7B,GAI5B2B,EAAKC,SAAS,CACZT,QAAS,QACTF,YAAajB,EACbe,UAAWf,MAMb2B,EAAKC,SAAS,CACZlB,MAAOiB,EAAKd,MAAMH,MAAQ,EAC1BC,SAAUgB,EAAKd,MAAMF,SAAW,IAElCgB,EAAKd,MAAMK,YAAYW,KAAK7B,GAI5B2B,EAAKC,SAAS,CAEZT,QAAS,QACTF,YAAajB,EACbe,UAAWf,KAST2B,EAAKd,MAAMK,YAAYY,SAAS9B,GAGlC2B,EAAKD,aAGLC,EAAKd,MAAMK,YAAYW,KAAK7B,GAC5B2B,EAAKC,SAAS,CAAClB,MAAOiB,EAAKd,MAAMH,MAAQ,IACrCiB,EAAKd,MAAMF,UAAYgB,EAAKd,MAAMH,OAAOiB,EAAKC,SAAS,CAACjB,SAAUgB,EAAKd,MAAMF,SAAW,KAGlGgB,EAAKC,SAAS,CAACb,UAAWf,6EAInB,IAAA+B,EAAAC,KAEP,OADAA,KAAKZ,aAAaN,GAEhBpB,EAAAC,EAAAC,cAACqC,EAAD,CACA3B,aAAc0B,KAAKnB,MAAMM,SACvBzB,EAAAC,EAAAC,cAACsC,EAAD,CACEzB,QAAQ,cACRC,MAAOsB,KAAKnB,MAAMH,MAClBC,SAAUqB,KAAKnB,MAAMF,WAEpBqB,KAAKnB,MAAMC,QAAQqB,IAAI,SAAAC,GAAM,OAC9B1C,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,cAAegC,EAAKhC,cACpBC,GAAIoC,EAAOpC,GACXsC,IAAKF,EAAOpC,GACZE,KAAMkC,EAAOlC,KACbE,MAAOgC,EAAOhC,MACdmC,WAAYH,EAAOG,WACnBC,SAAUJ,EAAOI,qBA1GXC,mBCDlBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0553424f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n\n    <div className=\"card\">\n      <div className=\"img-container\">\n      <span \n          onClick={() => props.displayFriend(props.id)} \n          className=\"displayID\">\n          <img alt={props.name} src={props.image} />\n      </span>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className= {(props.shakeWrapper===\"true\") ? \"wrapperShake\" : \"wrapper\"}>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"top\">\n      <div className=\"title-area-left\"></div>\n      <div><h1 className=\"title\">{props.heading}</h1></div>\n      <div><h4 className=\"score-report\">Score: {props.score} | Top Score: {props.topScore}</h4></div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedId: \"\",\n    topScore: 0,\n    score: 0,\n    message: \"\",\n    lastClicked: 0,\n    clickedList: [],\n    shakeit: \"false\"\n  };\n\n  shuffleArray = (friendsArray) => {\n    const shuffledArray = friendsArray.sort(function(a, b){return 0.5 - Math.random()});\n    return shuffledArray;\n    };\n\n  resetGame = () => {\n    // console.log(\"In Reset\");\n    // this.setState({score: 0});\n    // this.setState({lastClicked: 0});\n    // this.setState({shakeit: \"true\"})\n    // this.setState({clickedList: []})\n    // this.setState({clickedId: 0});\n    this.setState({\n      score: 0,\n      lastClicked: 0,\n      shakeit: \"true\",\n      clickedList: [],\n      clickedId: 0\n    })\n    // console.log(\"state= \",this.state);\n  };\n  \n  displayFriend = id => {    \n    if (this.state.lastClicked === 0){\n      if (this.state.topScore > this.state.score){\n        this.setState({score: this.state.score + 1});\n        this.state.clickedList.push(id);\n        // this.setState({shakeit: \"false\"});\n        // this.setState({lastClicked: id});\n        // this.setState({clickedId: id});\n        this.setState({\n          shakeit: \"false\",\n          lastClicked: id,\n          clickedId: id\n        })\n      }\n      else {\n        // this.setState({score: this.state.score + 1});\n        // this.setState({topScore: this.state.topScore + 1});\n        this.setState({\n          score: this.state.score + 1,\n          topScore: this.state.topScore + 1\n        })\n        this.state.clickedList.push(id);       \n        // this.setState({shakeit: \"false\"});\n        // this.setState({lastClicked: id});\n        // this.setState({clickedId: id});\n        this.setState({\n          // clickedList: this.state.clickedList.push(id),\n          shakeit: \"false\",\n          lastClicked: id,\n          clickedId: id\n        })\n      // this.setState({score: this.state.score + 1});\n      // this.setState({topScore: this.state.topScore + 1});\n      // console.log(\"firstID= \",id);\n      }\n    } \n      else {\n        // console.log(\"friend id=\",id);\n        if (this.state.clickedList.includes(id)) {\n          // console.log(\"clickedList= \",this.state.clickedList);\n          // console.log(\"friend id=\",id);\n          this.resetGame()\n        }\n        else {\n          this.state.clickedList.push(id); \n          this.setState({score: this.state.score + 1});\n          if (this.state.topScore <= this.state.score){this.setState({topScore: this.state.topScore + 1})}\n        }\n      }\n    this.setState({clickedId: id})\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    this.shuffleArray(friends);\n    return (\n      <Wrapper\n      shakeWrapper={this.state.shakeit} >\n        <Title\n          heading=\"Clicky Game\"\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n          {this.state.friends.map(friend => (\n          <FriendCard\n            displayFriend={this.displayFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}